diff --git a/t/t9300-fast-import.sh b/t/t9300-fast-import.sh
index 9aa3470d8..b8d394548 100755
--- a/t/t9300-fast-import.sh
+++ b/t/t9300-fast-import.sh
@@ -3124,11 +3124,14 @@ test_expect_success 'U: validate root delete result' '
 ### series V (checkpoint)
 ###
 
+# The commands in input_file should not produce any output on the file
+# descriptor set with --cat-blob-fd (or stdout if unspecified).
+#
 # To make sure you're observing the side effects of checkpoint *before*
 # fast-import terminates (and thus writes out its state), check that the
 # fast-import process is still running using background_import_still_running
 # *after* evaluating the test conditions.
-background_import_until_checkpoint () {
+background_import_then_checkpoint () {
 	options=$1
 	input_file=$2
 
@@ -3140,10 +3143,15 @@ background_import_until_checkpoint () {
 	exec 9<>V.output
 	rm V.output
 
-	cat $input_file >&8
 	git fast-import $options <&8 >&9 &
 	echo $! >V.pid
-	test_when_finished "kill $(cat V.pid) || true"
+	# We don't mind if fast-import has already died by the time the test
+	# ends.
+	test_when_finished "exec 8>&-; exec 9>&-; kill $(cat V.pid) || true"
+
+	cat "$input_file" >&8
+	echo "checkpoint" >&8
+	echo "progress checkpoint" >&8
 
 	error=0
 	if read output <&9
@@ -3158,12 +3166,9 @@ background_import_until_checkpoint () {
 		error=1
 	fi
 
-	exec 8>&-
-	exec 9>&-
-
 	if test $error -eq 1
 	then
-		exit 1
+		false
 	fi
 }
 
@@ -3171,25 +3176,23 @@ background_import_still_running () {
 	if ! kill -0 "$(cat V.pid)"
 	then
 		echo >&2 "background fast-import terminated too early"
-		exit 1
+		false
 	fi
 }
 
-test_expect_success 'V: checkpoint updates refs after reset' '
+test_expect_success PIPE 'V: checkpoint updates refs after reset' '
 	cat >input <<-\INPUT_END &&
 	reset refs/heads/V
 	from refs/heads/U
 
-	checkpoint
-	progress checkpoint
 	INPUT_END
 
-	background_import_until_checkpoint "" input &&
+	background_import_then_checkpoint "" input &&
 	test "$(git rev-parse --verify V)" = "$(git rev-parse --verify U)" &&
 	background_import_still_running
 '
 
-test_expect_success 'V: checkpoint updates refs and marks after commit' '
+test_expect_success PIPE 'V: checkpoint updates refs and marks after commit' '
 	cat >input <<-INPUT_END &&
 	commit refs/heads/V
 	mark :1
@@ -3197,11 +3200,9 @@ test_expect_success 'V: checkpoint updates refs and marks after commit' '
 	data 0
 	from refs/heads/U
 
-	checkpoint
-	progress checkpoint
 	INPUT_END
 
-	background_import_until_checkpoint "--export-marks=marks.actual" input &&
+	background_import_then_checkpoint "--export-marks=marks.actual" input &&
 
 	echo ":1 $(git rev-parse --verify V)" >marks.expected &&
 
@@ -3212,7 +3213,7 @@ test_expect_success 'V: checkpoint updates refs and marks after commit' '
 
 # Re-create the exact same commit, but on a different branch: no new object is
 # created in the database, but the refs and marks still need to be updated.
-test_expect_success 'V: checkpoint updates refs and marks after commit (no new objects)' '
+test_expect_success PIPE 'V: checkpoint updates refs and marks after commit (no new objects)' '
 	cat >input <<-INPUT_END &&
 	commit refs/heads/V2
 	mark :2
@@ -3220,11 +3221,9 @@ test_expect_success 'V: checkpoint updates refs and marks after commit (no new o
 	data 0
 	from refs/heads/U
 
-	checkpoint
-	progress checkpoint
 	INPUT_END
 
-	background_import_until_checkpoint "--export-marks=marks.actual" input &&
+	background_import_then_checkpoint "--export-marks=marks.actual" input &&
 
 	echo ":2 $(git rev-parse --verify V2)" >marks.expected &&
 
@@ -3233,18 +3232,16 @@ test_expect_success 'V: checkpoint updates refs and marks after commit (no new o
 	background_import_still_running
 '
 
-test_expect_success 'V: checkpoint updates tags after tag' '
+test_expect_success PIPE 'V: checkpoint updates tags after tag' '
 	cat >input <<-INPUT_END &&
 	tag Vtag
 	from refs/heads/V
 	tagger $GIT_COMMITTER_NAME <$GIT_COMMITTER_EMAIL> $GIT_COMMITTER_DATE
 	data 0
 
-	checkpoint
-	progress checkpoint
 	INPUT_END
 
-	background_import_until_checkpoint "" input &&
+	background_import_then_checkpoint "" input &&
 	git show-ref -d Vtag &&
 	background_import_still_running
 '
